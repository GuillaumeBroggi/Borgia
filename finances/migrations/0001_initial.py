# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-30 08:14
from __future__ import unicode_literals

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.CharField(max_length=255, verbose_name='Banque')),
                ('account', models.CharField(max_length=255, verbose_name='Numéro de compte')),
            ],
            options={
                'permissions': (('retrieve_bankaccount', 'Afficher un compte en banque'), ('list_bankaccount', 'Lister les comptes en banque')),
            },
        ),
        migrations.CreateModel(
            name='ExceptionnalMovement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('justification', models.TextField(blank=True, null=True, verbose_name='Justification')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Montant')),
                ('is_credit', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentSolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Montant')),
            ],
        ),
        migrations.CreateModel(
            name='Recharging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('module_id', models.PositiveIntegerField()),
            ],
            options={
                'permissions': (('retrieve_sale', 'Afficher une vente'), ('list_sale', 'Lister les ventes'), ('retrieve_recharging', 'Afficher un rechargement'), ('list_recharging', 'Lister les rechargements'), ('retrieve_transfert', 'Afficher un transfert'), ('list_transfert', 'Lister les transferts'), ('add_exceptionnal_movement', 'Faire un mouvement exceptionnel'), ('retrieve_exceptionnal_movement', 'Afficher un mouvement exceptionnel'), ('list_exceptionnal_movement', 'Lister les mouvements exceptionnels')),
            },
        ),
        migrations.CreateModel(
            name='SaleProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Prix')),
            ],
        ),
        migrations.CreateModel(
            name='SharedEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=254, verbose_name='Description')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date Evenement')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Paiement')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Prix')),
                ('bills', models.CharField(blank=True, max_length=254, null=True, verbose_name='Facture(s)')),
                ('done', models.BooleanField(default=False, verbose_name='Terminé')),
                ('remark', models.CharField(blank=True, max_length=254, null=True, verbose_name='Remarque')),
                ('ponderation', models.CharField(default='[]', max_length=10000, verbose_name='Liste ordonnée participants - pondérations')),
                ('final_price_per_ponderation', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Prix par ponderation')),
            ],
            options={
                'permissions': (('register_sharedevent', "S'inscrire à un événement commun"), ('list_sharedevent', 'Lister les événements communs'), ('manage_sharedevent', 'Gérer les événements communs'), ('proceed_payment_sharedevent', 'Procéder au paiement des événements communs')),
            },
        ),
        migrations.CreateModel(
            name='Transfert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('justification', models.TextField(blank=True, null=True, verbose_name='Justification')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Montant')),
            ],
        ),
        migrations.CreateModel(
            name='Cash',
            fields=[
                ('paymentsolution_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='finances.PaymentSolution')),
            ],
            options={
                'permissions': (),
            },
            bases=('finances.paymentsolution',),
        ),
        migrations.CreateModel(
            name='Cheque',
            fields=[
                ('paymentsolution_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='finances.PaymentSolution')),
                ('is_cashed', models.BooleanField(default=False, verbose_name='Est encaissé')),
                ('signature_date', models.DateField(default=django.utils.timezone.now, verbose_name='Date de signature')),
                ('cheque_number', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator('^[0-9]{7}$', 'Numéro de chèque\n                                                        invalide')], verbose_name='Numéro de chèque')),
            ],
            options={
                'permissions': (),
            },
            bases=('finances.paymentsolution',),
        ),
        migrations.CreateModel(
            name='LydiaFaceToFace',
            fields=[
                ('paymentsolution_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='finances.PaymentSolution')),
                ('date_operation', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('id_from_lydia', models.CharField(max_length=255, verbose_name='Numéro unique')),
                ('banked', models.BooleanField(default=False, verbose_name='Est encaissé')),
                ('date_banked', models.DateField(blank=True, null=True, verbose_name='Date encaissement')),
            ],
            options={
                'permissions': (),
            },
            bases=('finances.paymentsolution',),
        ),
        migrations.CreateModel(
            name='LydiaOnline',
            fields=[
                ('paymentsolution_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='finances.PaymentSolution')),
                ('date_operation', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('id_from_lydia', models.CharField(max_length=255, verbose_name='Numéro unique')),
                ('banked', models.BooleanField(default=False, verbose_name='Est encaissé')),
                ('date_banked', models.DateField(blank=True, null=True, verbose_name='Date encaissement')),
            ],
            options={
                'permissions': (),
            },
            bases=('finances.paymentsolution',),
        ),
    ]
